// vite.config.ts
import { defineConfig } from "file:///D:/Clases/2/DAD/UT1/Actividades/ProjectosReact/milibreria/node_modules/vite/dist/node/index.js";
import dts from "file:///D:/Clases/2/DAD/UT1/Actividades/ProjectosReact/milibreria/node_modules/vite-plugin-dts/dist/index.mjs";

// package.json
var peerDependencies = {
  react: "^18.3.1"
};

// vite.config.ts
var vite_config_default = defineConfig({
  build: {
    lib: {
      entry: "./src/index.ts",
      // Especifica el punto de entrada
      name: "milibreria",
      // Establece el nombre de la biblioteca generada.
      fileName: (format) => `index.${format}.js`,
      // Genera el nombre del archivo de salida según el formato.
      formats: ["cjs", "es"]
      // Especifica los formatos de salida (módulos CommonJS y ES).
    },
    rollupOptions: {
      external: [...Object.keys(peerDependencies)]
      // Define dependencias externas para rollup.
    },
    sourcemap: true,
    // Genera sourcemaps para depurar.
    emptyOutDir: true
    // Borra el directorio de salida antes de compilar.
  },
  plugins: [dts()],
  // Utiliza el complemento 'vite-plugin-dts' para generar archivos de declaración de TypeScript (d.ts).
  test: {
    globals: true,
    environment: "jsdom",
    setupFiles: "./setupTests.ts"
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiRDpcXFxcQ2xhc2VzXFxcXDJcXFxcREFEXFxcXFVUMVxcXFxBY3RpdmlkYWRlc1xcXFxQcm9qZWN0b3NSZWFjdFxcXFxtaWxpYnJlcmlhXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJEOlxcXFxDbGFzZXNcXFxcMlxcXFxEQURcXFxcVVQxXFxcXEFjdGl2aWRhZGVzXFxcXFByb2plY3Rvc1JlYWN0XFxcXG1pbGlicmVyaWFcXFxcdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L0NsYXNlcy8yL0RBRC9VVDEvQWN0aXZpZGFkZXMvUHJvamVjdG9zUmVhY3QvbWlsaWJyZXJpYS92aXRlLmNvbmZpZy50c1wiOy8vLyA8cmVmZXJlbmNlIHR5cGVzPVwidml0ZXN0XCIgLz5cclxuaW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcclxuaW1wb3J0IGR0cyBmcm9tIFwidml0ZS1wbHVnaW4tZHRzXCI7XHJcbmltcG9ydCB7IHBlZXJEZXBlbmRlbmNpZXMgfSBmcm9tIFwiLi9wYWNrYWdlLmpzb25cIjtcclxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcclxuICAgIGJ1aWxkOiB7XHJcbiAgICAgICAgbGliOiB7XHJcbiAgICAgICAgICAgIGVudHJ5OiBcIi4vc3JjL2luZGV4LnRzXCIsIC8vIEVzcGVjaWZpY2EgZWwgcHVudG8gZGUgZW50cmFkYVxyXG4gICAgICAgICAgICBuYW1lOiBcIm1pbGlicmVyaWFcIiwgLy8gRXN0YWJsZWNlIGVsIG5vbWJyZSBkZSBsYSBiaWJsaW90ZWNhIGdlbmVyYWRhLlxyXG4gICAgICAgICAgICBmaWxlTmFtZTogKGZvcm1hdCkgPT4gYGluZGV4LiR7Zm9ybWF0fS5qc2AsIC8vIEdlbmVyYSBlbCBub21icmUgZGVsIGFyY2hpdm8gZGUgc2FsaWRhIHNlZ1x1MDBGQW4gZWwgZm9ybWF0by5cclxuICAgICAgICAgICAgZm9ybWF0czogW1wiY2pzXCIsIFwiZXNcIl0sIC8vIEVzcGVjaWZpY2EgbG9zIGZvcm1hdG9zIGRlIHNhbGlkYSAobVx1MDBGM2R1bG9zIENvbW1vbkpTIHkgRVMpLlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcm9sbHVwT3B0aW9uczoge1xyXG4gICAgICAgICAgICBleHRlcm5hbDogWy4uLk9iamVjdC5rZXlzKHBlZXJEZXBlbmRlbmNpZXMpXSwgLy8gRGVmaW5lIGRlcGVuZGVuY2lhcyBleHRlcm5hcyBwYXJhIHJvbGx1cC5cclxuICAgICAgICB9LFxyXG4gICAgICAgIHNvdXJjZW1hcDogdHJ1ZSwgLy8gR2VuZXJhIHNvdXJjZW1hcHMgcGFyYSBkZXB1cmFyLlxyXG4gICAgICAgIGVtcHR5T3V0RGlyOiB0cnVlLCAvLyBCb3JyYSBlbCBkaXJlY3RvcmlvIGRlIHNhbGlkYSBhbnRlcyBkZSBjb21waWxhci5cclxuICAgIH0sXHJcbiAgICBwbHVnaW5zOiBbZHRzKCldLCAvLyBVdGlsaXphIGVsIGNvbXBsZW1lbnRvICd2aXRlLXBsdWdpbi1kdHMnIHBhcmEgZ2VuZXJhciBhcmNoaXZvcyBkZSBkZWNsYXJhY2lcdTAwRjNuIGRlIFR5cGVTY3JpcHQgKGQudHMpLlxyXG4gICAgdGVzdDoge1xyXG4gICAgICAgIGdsb2JhbHM6IHRydWUsXHJcbiAgICAgICAgZW52aXJvbm1lbnQ6IFwianNkb21cIixcclxuICAgICAgICBzZXR1cEZpbGVzOiBcIi4vc2V0dXBUZXN0cy50c1wiLFxyXG4gICAgfSxcclxufSk7XHJcbiIsICJ7XG4gIFwibmFtZVwiOiBcIm1pbGlicmVyaWFcIixcbiAgXCJ2ZXJzaW9uXCI6IFwiMS4wLjBcIixcbiAgXCJ0eXBlXCI6IFwibW9kdWxlXCIsXG4gIFwibWFpblwiOiBcImRpc3QvaW5kZXguY2pzLmpzXCIsXG4gIFwibW9kdWxlXCI6IFwiZGlzdC9pbmRleC5lcy5qc1wiLFxuICBcInR5cGVzXCI6IFwiZGlzdC9pbmRleC5kLnRzXCIsXG4gIFwiZmlsZXNcIjogW1xuICAgIFwiL2Rpc3RcIlxuICBdLFxuICBcInNjcmlwdHNcIjoge1xuICAgIFwidGVzdFwiOiBcInZpdGVzdCBydW5cIixcbiAgICBcInRlc3Qtd2F0Y2hcIjogXCJ2aXRlc3RcIixcbiAgICBcInRlc3Q6dWlcIjogXCJ2aXRlc3QgLS11aVwiLFxuICAgIFwiZm9ybWF0XCI6IFwicHJldHRpZXIgLS13cml0ZSAtLXBhcnNlciB0eXBlc2NyaXB0ICcqKi8qLnt0cyx0c3h9J1wiLFxuICAgIFwibGludFwiOiBcImVzbGludCAuIC0tZXh0IC50cywudHN4IC0taWdub3JlLXBhdGggLmdpdGlnbm9yZSAtLWZpeFwiLFxuICAgIFwiYnVpbGRcIjogXCJ0c2MgJiYgdml0ZSBidWlsZFwiLFxuICAgIFwic3Rvcnlib29rXCI6IFwic3Rvcnlib29rIGRldiAtcCA2MDA2XCIsXG4gICAgXCJidWlsZC1zdG9yeWJvb2tcIjogXCJzdG9yeWJvb2sgYnVpbGRcIlxuICB9LFxuICBcImtleXdvcmRzXCI6IFtdLFxuICBcImF1dGhvclwiOiBcIlwiLFxuICBcImxpY2Vuc2VcIjogXCJJU0NcIixcbiAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICBcImRldkRlcGVuZGVuY2llc1wiOiB7XG4gICAgXCJAY2hyb21hdGljLWNvbS9zdG9yeWJvb2tcIjogXCJeMS45LjBcIixcbiAgICBcIkBzdG9yeWJvb2svYWRkb24tZXNzZW50aWFsc1wiOiBcIl44LjMuNVwiLFxuICAgIFwiQHN0b3J5Ym9vay9hZGRvbi1pbnRlcmFjdGlvbnNcIjogXCJeOC4zLjVcIixcbiAgICBcIkBzdG9yeWJvb2svYWRkb24tbGlua3NcIjogXCJeOC4zLjVcIixcbiAgICBcIkBzdG9yeWJvb2svYWRkb24tb25ib2FyZGluZ1wiOiBcIl44LjMuNVwiLFxuICAgIFwiQHN0b3J5Ym9vay9ibG9ja3NcIjogXCJeOC4zLjVcIixcbiAgICBcIkBzdG9yeWJvb2svcmVhY3RcIjogXCJeOC4zLjVcIixcbiAgICBcIkBzdG9yeWJvb2svcmVhY3Qtdml0ZVwiOiBcIl44LjMuNVwiLFxuICAgIFwiQHN0b3J5Ym9vay90ZXN0XCI6IFwiXjguMy41XCIsXG4gICAgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tXCI6IFwiXjYuNS4wXCIsXG4gICAgXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI6IFwiXjE2LjAuMVwiLFxuICAgIFwiQHR5cGVzL3JlYWN0XCI6IFwiXjE4LjMuMTFcIixcbiAgICBcIkB0eXBlc2NyaXB0LWVzbGludC9lc2xpbnQtcGx1Z2luXCI6IFwiXjguOC4xXCIsXG4gICAgXCJAdHlwZXNjcmlwdC1lc2xpbnQvcGFyc2VyXCI6IFwiXjguOC4xXCIsXG4gICAgXCJlc2xpbnRcIjogXCJeOC41Ny4xXCIsXG4gICAgXCJlc2xpbnQtY29uZmlnLXByZXR0aWVyXCI6IFwiXjkuMS4wXCIsXG4gICAgXCJlc2xpbnQtcGx1Z2luLXByZXR0aWVyXCI6IFwiXjUuMi4xXCIsXG4gICAgXCJlc2xpbnQtcGx1Z2luLXJlYWN0XCI6IFwiXjcuMzcuMVwiLFxuICAgIFwiZXNsaW50LXBsdWdpbi1yZWFjdC1ob29rc1wiOiBcIl40LjYuMlwiLFxuICAgIFwiZXNsaW50LXBsdWdpbi1zdG9yeWJvb2tcIjogXCJeMC45LjBcIixcbiAgICBcImpzZG9tXCI6IFwiXjI1LjAuMVwiLFxuICAgIFwicHJldHRpZXJcIjogXCJeMy4zLjNcIixcbiAgICBcInN0b3J5Ym9va1wiOiBcIl44LjMuNVwiLFxuICAgIFwidHlwZXNjcmlwdFwiOiBcIl41LjYuM1wiLFxuICAgIFwidml0ZVwiOiBcIl41LjQuOFwiLFxuICAgIFwidml0ZS1wbHVnaW4tZHRzXCI6IFwiXjQuMi4zXCIsXG4gICAgXCJ2aXRlc3RcIjogXCJeMi4xLjJcIlxuICB9LFxuICBcInBlZXJEZXBlbmRlbmNpZXNcIjoge1xuICAgIFwicmVhY3RcIjogXCJeMTguMy4xXCJcbiAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUNBLFNBQVMsb0JBQW9CO0FBQzdCLE9BQU8sU0FBUzs7O0FDbURkLHVCQUFvQjtBQUFBLEVBQ2xCLE9BQVM7QUFDWDs7O0FEbkRGLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQ3hCLE9BQU87QUFBQSxJQUNILEtBQUs7QUFBQSxNQUNELE9BQU87QUFBQTtBQUFBLE1BQ1AsTUFBTTtBQUFBO0FBQUEsTUFDTixVQUFVLENBQUMsV0FBVyxTQUFTLE1BQU07QUFBQTtBQUFBLE1BQ3JDLFNBQVMsQ0FBQyxPQUFPLElBQUk7QUFBQTtBQUFBLElBQ3pCO0FBQUEsSUFDQSxlQUFlO0FBQUEsTUFDWCxVQUFVLENBQUMsR0FBRyxPQUFPLEtBQUssZ0JBQWdCLENBQUM7QUFBQTtBQUFBLElBQy9DO0FBQUEsSUFDQSxXQUFXO0FBQUE7QUFBQSxJQUNYLGFBQWE7QUFBQTtBQUFBLEVBQ2pCO0FBQUEsRUFDQSxTQUFTLENBQUMsSUFBSSxDQUFDO0FBQUE7QUFBQSxFQUNmLE1BQU07QUFBQSxJQUNGLFNBQVM7QUFBQSxJQUNULGFBQWE7QUFBQSxJQUNiLFlBQVk7QUFBQSxFQUNoQjtBQUNKLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
